{"version":3,"sources":["webpack:///./src/components/maps/PharmacyMap.vue?4895","webpack:///src/components/maps/PharmacyMap.vue","webpack:///./src/components/maps/PharmacyMap.vue?d4d1","webpack:///./src/components/maps/PharmacyMap.vue","webpack:///./node_modules/core-js/modules/es.array.map.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","staticStyle","_v","directives","name","rawName","value","expression","attrs","domProps","on","$event","type","indexOf","_k","keyCode","key","searchPlace","target","composing","keyword","_m","staticRenderFns","component","$","$map","map","fails","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","USES_TO_LENGTH","call","length","0","it","proto","forced","callbackfn","arguments","undefined"],"mappings":"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","file":"js/chunk-54a52701.a59d7295.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\",staticStyle:{\"width\":\"100%\",\"height\":\"650px\",\"margin-top\":\"90px\"}},[_c('div',[_c('div',{staticClass:\"form-group row \"},[_c('span',{staticClass:\"text-danger\"},[_vm._v(\"검색은 국내에 한해서만 가능합니다.\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.keyword),expression:\"keyword\"}],staticClass:\"form-control col-md-10\",attrs:{\"placeholder\":\"장소를 입력해 주세요.\"},domProps:{\"value\":(_vm.keyword)},on:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.searchPlace($event)},\"input\":function($event){if($event.target.composing){ return; }_vm.keyword=$event.target.value}}}),_c('button',{staticClass:\"btn btn-primary col-md-1\",on:{\"click\":_vm.searchPlace}},[_vm._v(\"검색\")])]),_c('div',{staticClass:\"map_wrap\"},[_c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"150%\",\"position\":\"relative\",\"overflow\":\"scroll\"},attrs:{\"id\":\"map\"}}),_c('ul',{directives:[{name:\"show\",rawName:\"v-show\",value:(false),expression:\"false\"}],attrs:{\"id\":\"category\"}},[_vm._m(0)])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{attrs:{\"id\":\"PM9\",\"data-order\":\"2\"}},[_c('span',{staticClass:\"category_bg pharmacy\"}),_vm._v(\" 약국 \")])}]\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"container\" style=\"width:100%;height:100%;margin-top: 90px; height: 650px;\">\r\n        <div>\r\n            <div class=\"form-group row \">\r\n                <!-- <select class=\"form-control col-md-3\" v-model=\"si\" @change=\"select_gu\">\r\n                    <option disabled value=\"\">선택</option>\r\n                    <option v-for=\"(one,idx) in location.region.si\" :key=\"idx\" :value=\"one.value\">{{one.value}}</option>\r\n                </select>\r\n                <select class=\"form-control col-md-3\" v-model=\"gu\" @change=\"select_dong\">\r\n                    <option disabled value=\"\">선택</option>\r\n                    <option v-for=\"(gu,idx) in optionGu\" v-bind:key=\"idx\" :value=\"gu.value\">{{gu.value}}</option>\r\n                </select>\r\n                <select class=\"form-control col-md-3\" v-model=\"dong\" @change=\"searchPlace\">\r\n                    <option disabled value=\"\">선택</option>\r\n                    <option v-for=\"(dong,idx) in optionDong\" v-bind:key=\"idx\">{{dong.value}}</option>\r\n                </select> -->\r\n                <span class=\"text-danger\">검색은 국내에 한해서만 가능합니다.</span>\r\n                <input class=\"form-control col-md-10\" @keyup.enter=\"searchPlace\" v-model=\"keyword\" placeholder=\"장소를 입력해 주세요.\">\r\n                <button class=\"btn btn-primary col-md-1\" @click=\"searchPlace\">검색</button>\r\n            </div>\r\n            <div class=\"map_wrap\">\r\n                <div id=\"map\" style=\"width:100%;height:150%;position:relative;overflow:scroll;\"></div>\r\n                <!-- 카테고리 선택 마커(보이지 않도록 처리) -->\r\n                <ul id=\"category\" v-show=\"false\">\r\n                    <li id=\"PM9\" data-order=\"2\">\r\n                        <span class=\"category_bg pharmacy\"></span>\r\n                        약국\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// 지리 정보를 담고있는 json 파일\r\n    // import location from '@/assets/location.json'\r\n    // 아래 코드를 사용하여 eslint를 해당 파일에서 사용 불능으로 만들 수 있다. \r\n    // 반드시 script 코드 맨 위에 작성할 것.\r\n    /* eslint-disable */\r\n    export default {\r\n        name: 'PharmacyMap',\r\n        data() {\r\n            return {\r\n                lat: 37.566826, // 위도\r\n                lon: 126.9786567, // 경도\r\n                keyword: '',\r\n                // si: '', // 검색할 지역설정(시) \r\n                // gu: '',  // 검색할 지역설정(구)\r\n                // dong: '', // 검색할 지역설정(동)\r\n                // location: location, // 행정지역목록\r\n                // optionGu: [], // 시를 선택했을 시 보여질 구의 배열\r\n                // optionDong: [], // 구를 선택했을 시 보여질 동의 배열\r\n                map: {}, // 카카오 맵 객체\r\n                center: (0.0), // 지도 중심 좌표\r\n                level: 5  // 지도 확대 레벨\r\n            }\r\n        },\r\n        methods: {\r\n            createMap() {\r\n                // 마커를 클릭했을 때 해당 장소의 상세정보를 보여줄 커스텀오버레이입니다\r\n                var placeOverlay = new kakao.maps.CustomOverlay({ zIndex: 1 }),\r\n                    contentNode = document.createElement('div'), // 커스텀 오버레이의 컨텐츠 엘리먼트 입니다 \r\n                    markers = [], // 마커를 담을 배열입니다\r\n                    // 약국의 카테고리(PM9)로 고정\r\n                    currCategory = 'PM9'; // 현재 선택된 카테고리를 가지고 있을 변수입니다\r\n\r\n                var mapContainer = document.getElementById('map'), // 지도를 표시할 div \r\n                    mapOption = {\r\n                        center: new kakao.maps.LatLng(this.lat, this.lon), // 지도의 중심좌표\r\n                        level: this.level // 지도의 확대 레벨\r\n                    };\r\n                this.center = mapOption.center;\r\n                // 지도를 생성합니다    \r\n                var map = new kakao.maps.Map(mapContainer, mapOption);\r\n                this.map = map;\r\n                // 장소 검색 객체를 생성합니다\r\n                var ps = new kakao.maps.services.Places(map);\r\n                // 지도에 idle 이벤트를 등록합니다\r\n                kakao.maps.event.addListener(map, 'idle', searchPlaces);\r\n                // 커스텀 오버레이의 컨텐츠 노드에 css class를 추가합니다 \r\n                contentNode.className = 'placeinfo_wrap';\r\n                // 커스텀 오버레이의 컨텐츠 노드에 mousedown, touchstart 이벤트가 발생했을때\r\n                // 지도 객체에 이벤트가 전달되지 않도록 이벤트 핸들러로 kakao.maps.event.preventMap 메소드를 등록합니다 \r\n                addEventHandle(contentNode, 'mousedown', kakao.maps.event.preventMap);\r\n                addEventHandle(contentNode, 'touchstart', kakao.maps.event.preventMap);\r\n                // 커스텀 오버레이 컨텐츠를 설정합니다\r\n                placeOverlay.setContent(contentNode);\r\n                // 각 카테고리에 클릭 이벤트를 등록합니다\r\n                addCategoryClickEvent();\r\n                // 엘리먼트에 이벤트 핸들러를 등록하는 함수입니다\r\n                function addEventHandle(target, type, callback) {\r\n                    if (target.addEventListener) {\r\n                        target.addEventListener(type, callback);\r\n                    } else {\r\n                        target.attachEvent('on' + type, callback);\r\n                    }\r\n                }\r\n                // 카테고리 검색을 요청하는 함수입니다\r\n                function searchPlaces() {\r\n                    if (!currCategory) {\r\n                        return;\r\n                    }\r\n                    // 커스텀 오버레이를 숨깁니다 \r\n                    placeOverlay.setMap(null);\r\n                    // 지도에 표시되고 있는 마커를 제거합니다\r\n                    removeMarker();\r\n                    ps.categorySearch(currCategory, placesSearchCB, { useMapBounds: true });\r\n                }\r\n                // 페이지가 처음 로딩되었을 때 약국이 표시되도록 호출\r\n                searchPlaces();\r\n\r\n                // 장소검색이 완료됐을 때 호출되는 콜백함수 입니다\r\n                function placesSearchCB(data, status, pagination) {\r\n                    if (status === kakao.maps.services.Status.OK) {\r\n                        // 정상적으로 검색이 완료됐으면 지도에 마커를 표출합니다\r\n                        displayPlaces(data);\r\n                    } else if (status === kakao.maps.services.Status.ZERO_RESULT) {\r\n                        // 검색결과가 없는경우 해야할 처리가 있다면 이곳에 작성해 주세요\r\n                    } else if (status === kakao.maps.services.Status.ERROR) {\r\n                        // 에러로 인해 검색결과가 나오지 않은 경우 해야할 처리가 있다면 이곳에 작성해 주세요\r\n                    }\r\n                }\r\n                // 지도에 마커를 표출하는 함수입니다\r\n                function displayPlaces(places) {\r\n                    // 몇번째 카테고리가 선택되어 있는지 얻어옵니다\r\n                    // 이 순서는 스프라이트 이미지에서의 위치를 계산하는데 사용됩니다\r\n                    var order = document.getElementById(currCategory).getAttribute('data-order');\r\n                    for (var i = 0; i < places.length; i++) {\r\n                        // 마커를 생성하고 지도에 표시합니다\r\n                        var marker = addMarker(new kakao.maps.LatLng(places[i].y, places[i].x), order);\r\n                        // 마커와 검색결과 항목을 클릭 했을 때\r\n                        // 장소정보를 표출하도록 클릭 이벤트를 등록합니다\r\n                        (function (marker, place) {\r\n                            kakao.maps.event.addListener(marker, 'click', function () {\r\n                                displayPlaceInfo(place);\r\n                            });\r\n                        })(marker, places[i]);\r\n                    }\r\n                }\r\n                // 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\r\n                function addMarker(position, order) {\r\n                    var imageSrc = 'http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/places_category.png', // 마커 이미지 url, 스프라이트 이미지를 씁니다\r\n                        imageSize = new kakao.maps.Size(27, 28),  // 마커 이미지의 크기\r\n                        imgOptions = {\r\n                            spriteSize: new kakao.maps.Size(72, 208), // 스프라이트 이미지의 크기\r\n                            spriteOrigin: new kakao.maps.Point(46, (order * 36)), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\r\n                            offset: new kakao.maps.Point(11, 28) // 마커 좌표에 일치시킬 이미지 내에서의 좌표\r\n                        },\r\n                        markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions),\r\n                        marker = new kakao.maps.Marker({\r\n                            position: position, // 마커의 위치\r\n                            image: markerImage\r\n                        });\r\n                    marker.setMap(map); // 지도 위에 마커를 표출합니다\r\n                    markers.push(marker);  // 배열에 생성된 마커를 추가합니다\r\n                    return marker;\r\n                }\r\n                // 지도 위에 표시되고 있는 마커를 모두 제거합니다\r\n                function removeMarker() {\r\n                    for (var i = 0; i < markers.length; i++) {\r\n                        markers[i].setMap(null);\r\n                    }\r\n                    markers = [];\r\n                }\r\n                // 클릭한 마커에 대한 장소 상세정보를 커스텀 오버레이로 표시하는 함수입니다\r\n                function displayPlaceInfo(place) {\r\n                    var content = '<div class=\"placeinfo\">' +\r\n                        '   <a class=\"title\" href=\"' + place.place_url + '\" target=\"_blank\" title=\"' + place.place_name + '\">' + place.place_name + '</a>';\r\n                    if (place.road_address_name) {\r\n                        content += '    <span title=\"' + place.road_address_name + '\">' + place.road_address_name + '</span>' +\r\n                            '  <span class=\"jibun\" title=\"' + place.address_name + '\">(지번 : ' + place.address_name + ')</span>';\r\n                    } else {\r\n                        content += '    <span title=\"' + place.address_name + '\">' + place.address_name + '</span>';\r\n                    }\r\n                    content += '    <span class=\"tel\">' + place.phone + '</span>' +\r\n                        '</div>' +\r\n                        '<div class=\"after\"></div>';\r\n                    contentNode.innerHTML = content;\r\n                    placeOverlay.setPosition(new kakao.maps.LatLng(place.y, place.x));\r\n                    placeOverlay.setMap(map);\r\n                }\r\n                // 각 카테고리에 클릭 이벤트를 등록합니다\r\n                function addCategoryClickEvent() {\r\n                    var category = document.getElementById('category'),\r\n                        children = category.children;\r\n                    for (var i = 0; i < children.length; i++) {\r\n                        children[i].onclick = onClickCategory;\r\n                    }\r\n                }\r\n                // 카테고리를 클릭했을 때 호출되는 함수입니다\r\n                function onClickCategory() {\r\n                    var id = this.id,\r\n                        className = this.className;\r\n                    placeOverlay.setMap(null);\r\n                    if (className === 'on') {\r\n                        currCategory = '';\r\n                        changeCategoryClass();\r\n                        removeMarker();\r\n                    } else {\r\n                        currCategory = id;\r\n                        changeCategoryClass(this);\r\n                        searchPlaces();\r\n                    }\r\n                }\r\n                // 클릭된 카테고리에만 클릭된 스타일을 적용하는 함수입니다\r\n                function changeCategoryClass(el) {\r\n                    var category = document.getElementById('category'),\r\n                        children = category.children,\r\n                        i;\r\n                    for (i = 0; i < children.length; i++) {\r\n                        children[i].className = '';\r\n                    }\r\n                    if (el) {\r\n                        el.className = 'on';\r\n                    }\r\n                }\r\n            },\r\n            searchPlace() {\r\n                var component = this;\r\n                var geocoder = new kakao.maps.services.Geocoder();\r\n\r\n                // 주소에 해당하는 좌표를 검색\r\n                geocoder.addressSearch(this.keyword, function (result, status) {\r\n\r\n                    if (status === kakao.maps.services.Status.OK) {\r\n                        console.log(result);\r\n                        console.log('x=' + result[0].x)\r\n                        console.log('y=' + result[0].y)\r\n                        // x=위도, y=경도\r\n                        let lat = result[0].y;\r\n                        let lon = result[0].x;\r\n\r\n                        // 버튼을 클릭하면 아래 배열의 좌표들이 모두 보이게 지도 범위를 재설정합니다 \r\n                        var points = [\r\n                            new kakao.maps.LatLng(lat, lon),\r\n                        ];\r\n\r\n                        // 지도를 재설정할 범위정보를 가지고 있을 LatLngBounds 객체를 생성합니다\r\n                        var bounds = new kakao.maps.LatLngBounds();\r\n\r\n                        var i, marker;\r\n                        for (i = 0; i < points.length; i++) {\r\n                            // LatLngBounds 객체에 좌표를 추가합니다\r\n                            bounds.extend(points[i]);\r\n                        }\r\n                        // LatLngBounds 객체에 추가된 좌표들을 기준으로 지도의 범위를 재설정합니다\r\n                        // 이때 지도의 중심좌표와 레벨이 변경될 수 있습니다\r\n                        component.map.setBounds(bounds);\r\n                        // 검색 후 지도의 레벨이 카카오에서 설정한 초기 레벨(2)로 변경되므로\r\n                        // 지도의 레벨을 현재 지도의 레벨과 같게 재설정해준다.\r\n                        component.map.setLevel(component.level);\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        mounted: function () {\r\n            this.createMap()\r\n        }// mounted end\r\n    }\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PharmacyMap.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PharmacyMap.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PharmacyMap.vue?vue&type=template&id=af299128&\"\nimport script from \"./PharmacyMap.vue?vue&type=script&lang=js&\"\nexport * from \"./PharmacyMap.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar fails = require('../internals/fails');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n// FF49- issue\nvar USES_TO_LENGTH = HAS_SPECIES_SUPPORT && !fails(function () {\n  [].map.call({ length: -1, 0: 1 }, function (it) { throw it; });\n});\n\n// `Array.prototype.map` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n"],"sourceRoot":""}